{
  "comments": [
    {
      "key": {
        "uuid": "7faddb67_cdb49a38",
        "filename": "libcutils/sched_policy.c",
        "patchSetId": 3
      },
      "lineNbr": 97,
      "author": {
        "id": 13409
      },
      "writtenOn": "2016-03-18T20:31:26Z",
      "side": 1,
      "message": "Build fail here, fixed in next version.",
      "revId": "19a0e4d20f8ded2fa5c150268efe6f8701a45ef7",
      "serverId": "1ec6b3db-b2c1-4fa4-84a2-4c7efe89ba71",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7faddb67_2dcbeea5",
        "filename": "libcutils/sched_policy.c",
        "patchSetId": 3
      },
      "lineNbr": 109,
      "author": {
        "id": 14090
      },
      "writtenOn": "2016-03-18T20:45:46Z",
      "side": 1,
      "message": "take a look at: \n    system/core/include/cutils/process_name.h",
      "revId": "19a0e4d20f8ded2fa5c150268efe6f8701a45ef7",
      "serverId": "1ec6b3db-b2c1-4fa4-84a2-4c7efe89ba71",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7faddb67_cdbb3a0c",
        "filename": "libcutils/sched_policy.c",
        "patchSetId": 3
      },
      "lineNbr": 109,
      "author": {
        "id": 14090
      },
      "writtenOn": "2016-03-18T20:48:36Z",
      "side": 1,
      "message": "Nvm, it just returns a process name that you set.\n\n   const char* get_process_name(void) {\n        return process_name;\n   }",
      "parentUuid": "7faddb67_2dcbeea5",
      "revId": "19a0e4d20f8ded2fa5c150268efe6f8701a45ef7",
      "serverId": "1ec6b3db-b2c1-4fa4-84a2-4c7efe89ba71",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7faddb67_2d7d2e6e",
        "filename": "libcutils/sched_policy.c",
        "patchSetId": 3
      },
      "lineNbr": 115,
      "author": {
        "id": 14090
      },
      "writtenOn": "2016-03-18T20:45:46Z",
      "side": 1,
      "message": "(sizeof(proc_name) - 1) here to ensure it\u0027s null-terminated.",
      "revId": "19a0e4d20f8ded2fa5c150268efe6f8701a45ef7",
      "serverId": "1ec6b3db-b2c1-4fa4-84a2-4c7efe89ba71",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7faddb67_8d9f82b3",
        "filename": "libcutils/sched_policy.c",
        "patchSetId": 3
      },
      "lineNbr": 118,
      "author": {
        "id": 2936
      },
      "writtenOn": "2016-03-18T20:22:59Z",
      "side": 1,
      "message": "Again, if you initialize proc_name[255] \u003d {0}, you can get away without needing to tack on a 0 at the end of whatever you read/failed to read.",
      "revId": "19a0e4d20f8ded2fa5c150268efe6f8701a45ef7",
      "serverId": "1ec6b3db-b2c1-4fa4-84a2-4c7efe89ba71",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7faddb67_edadd6ea",
        "filename": "libcutils/sched_policy.c",
        "patchSetId": 3
      },
      "lineNbr": 118,
      "author": {
        "id": 13409
      },
      "writtenOn": "2016-03-18T20:28:10Z",
      "side": 1,
      "message": "good call, my first iteration malloc\u0027d and free\u0027d this, so this is a remnant from that.",
      "parentUuid": "7faddb67_8d9f82b3",
      "revId": "19a0e4d20f8ded2fa5c150268efe6f8701a45ef7",
      "serverId": "1ec6b3db-b2c1-4fa4-84a2-4c7efe89ba71",
      "unresolved": false
    }
  ]
}